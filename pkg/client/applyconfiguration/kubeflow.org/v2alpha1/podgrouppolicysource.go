// Copyright 2024 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2alpha1

// PodGroupPolicySourceApplyConfiguration represents an declarative configuration of the PodGroupPolicySource type for use
// with apply.
type PodGroupPolicySourceApplyConfiguration struct {
	Coscheduling *CoschedulingPodGroupPolicySourceApplyConfiguration `json:"coscheduling,omitempty"`
}

// PodGroupPolicySourceApplyConfiguration constructs an declarative configuration of the PodGroupPolicySource type for use with
// apply.
func PodGroupPolicySource() *PodGroupPolicySourceApplyConfiguration {
	return &PodGroupPolicySourceApplyConfiguration{}
}

// WithCoscheduling sets the Coscheduling field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Coscheduling field is set to the value of the last call.
func (b *PodGroupPolicySourceApplyConfiguration) WithCoscheduling(value *CoschedulingPodGroupPolicySourceApplyConfiguration) *PodGroupPolicySourceApplyConfiguration {
	b.Coscheduling = value
	return b
}
